# =====================================================
# E-COMPTA-IA - CONFIGURATION DOCKER BASE DE DONNÉES
# =====================================================

version: '3.8'

services:
  # Base de données PostgreSQL pour la production
  postgres:
    image: postgres:15-alpine
    container_name: ecomptaia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecomptaia_db
      POSTGRES_USER: ecomptaia_user
      POSTGRES_PASSWORD: ecomptaia_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=fr_FR.UTF-8 --lc-ctype=fr_FR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecomptaia_user -d ecomptaia_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de données PostgreSQL pour les tests
  postgres-test:
    image: postgres:15-alpine
    container_name: ecomptaia-postgres-test
    restart: "no"
    environment:
      POSTGRES_DB: ecomptaia_test_db
      POSTGRES_USER: ecomptaia_test_user
      POSTGRES_PASSWORD: ecomptaia_test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=fr_FR.UTF-8 --lc-ctype=fr_FR.UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - ecomptaia-network
    profiles:
      - test

  # Redis pour le cache et les sessions
  redis:
    image: redis:7-alpine
    container_name: ecomptaia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: redis-server --appendonly yes --requirepass ecomptaia_redis_password

  # Base de données H2 pour le développement (optionnel)
  h2:
    image: oscarfonts/h2
    container_name: ecomptaia-h2
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      H2_OPTIONS: "-web -webAllowOthers -tcp -tcpAllowOthers -browser"
    volumes:
      - h2_data:/opt/h2-data
    networks:
      - ecomptaia-network
    profiles:
      - dev

  # pgAdmin pour la gestion de la base de données PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ecomptaia-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ecomptaia.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ecomptaia-network
    depends_on:
      - postgres
    profiles:
      - admin

  # Monitoring avec Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ecomptaia-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ecomptaia-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # Grafana pour la visualisation des métriques
  grafana:
    image: grafana/grafana:latest
    container_name: ecomptaia-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - ecomptaia-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  redis_data:
    driver: local
  h2_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ecomptaia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16








