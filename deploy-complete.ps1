# Script de d√©ploiement automatique complet E-COMPTA-IA
# Auteur: Assistant IA
# Date: $(Get-Date)

Write-Host "üöÄ D√âPLOIEMENT AUTOMATIQUE E-COMPTA-IA" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green

# Fonction pour v√©rifier si un port est libre
function Test-Port {
    param([int]$Port)
    try {
        $connection = New-Object System.Net.Sockets.TcpClient
        $connection.Connect("localhost", $Port)
        $connection.Close()
        return $false
    }
    catch {
        return $true
    }
}

# Fonction pour attendre qu'un service soit pr√™t
function Wait-ForService {
    param([string]$ServiceName, [int]$Port, [int]$TimeoutSeconds = 60)
    
    Write-Host "‚è≥ Attente du service $ServiceName sur le port $Port..." -ForegroundColor Yellow
    
    $elapsed = 0
    while ($elapsed -lt $TimeoutSeconds) {
        if (Test-Port -Port $Port) {
            Start-Sleep -Seconds 2
            $elapsed += 2
        } else {
            Write-Host "‚úÖ $ServiceName est pr√™t !" -ForegroundColor Green
            return $true
        }
    }
    
    Write-Host "‚ùå Timeout: $ServiceName n'est pas pr√™t apr√®s $TimeoutSeconds secondes" -ForegroundColor Red
    return $false
}

# √âtape 1: Nettoyage
Write-Host "üßπ NETTOYAGE DES CONTAINERS EXISTANTS..." -ForegroundColor Cyan
podman-compose down
podman-compose -f monitoring/podman-compose.yml down
podman system prune -f
podman volume prune -f

# √âtape 2: V√©rification des ports
Write-Host "üîç V√âRIFICATION DES PORTS..." -ForegroundColor Cyan
$ports = @(5432, 8080, 4200, 3000, 9090, 8081, 9100, 9187, 9121, 9093)

foreach ($port in $ports) {
    if (-not (Test-Port -Port $port)) {
        Write-Host "‚ö†Ô∏è  Port $port est d√©j√† utilis√©" -ForegroundColor Yellow
    }
}

# √âtape 3: D√©ploiement de la base de donn√©es
Write-Host "üóÑÔ∏è  D√âPLOIEMENT DE POSTGRESQL..." -ForegroundColor Cyan
podman-compose up -d postgres

if (-not (Wait-ForService -ServiceName "PostgreSQL" -Port 5432)) {
    Write-Host "‚ùå √âchec du d√©ploiement de PostgreSQL" -ForegroundColor Red
    exit 1
}

# √âtape 4: D√©ploiement du backend
Write-Host "üîß D√âPLOIEMENT DU BACKEND SPRING BOOT..." -ForegroundColor Cyan
podman-compose up -d --build backend

if (-not (Wait-ForService -ServiceName "Backend" -Port 8080)) {
    Write-Host "‚ùå √âchec du d√©ploiement du backend" -ForegroundColor Red
    exit 1
}

# √âtape 5: Test de l'API backend
Write-Host "üß™ TEST DE L'API BACKEND..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/hr/management/test/base" -Method GET -TimeoutSec 10
    Write-Host "‚úÖ API Backend fonctionne: $($response)" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  API Backend non accessible: $($_.Exception.Message)" -ForegroundColor Yellow
}

# √âtape 6: D√©ploiement du frontend
Write-Host "üé® D√âPLOIEMENT DU FRONTEND ANGULAR..." -ForegroundColor Cyan
podman-compose up -d --build frontend

if (-not (Wait-ForService -ServiceName "Frontend" -Port 4200)) {
    Write-Host "‚ùå √âchec du d√©ploiement du frontend" -ForegroundColor Red
    exit 1
}

# √âtape 7: D√©ploiement de nginx
Write-Host "üåê D√âPLOIEMENT DE NGINX..." -ForegroundColor Cyan
podman-compose up -d nginx

# √âtape 8: D√©ploiement du monitoring
Write-Host "üìä D√âPLOIEMENT DU MONITORING..." -ForegroundColor Cyan
podman-compose -f monitoring/podman-compose.yml up -d

# √âtape 9: V√©rification finale
Write-Host "üîç V√âRIFICATION FINALE..." -ForegroundColor Cyan
Start-Sleep -Seconds 10

Write-Host "üìã √âTAT DES CONTAINERS:" -ForegroundColor Green
podman ps

Write-Host "üåê URLS D'ACC√àS:" -ForegroundColor Green
Write-Host "  ‚Ä¢ Frontend: http://localhost:4200" -ForegroundColor White
Write-Host "  ‚Ä¢ Backend API: http://localhost:8080/api" -ForegroundColor White
Write-Host "  ‚Ä¢ Nginx Proxy: http://localhost:8080" -ForegroundColor White
Write-Host "  ‚Ä¢ Grafana: http://localhost:3000" -ForegroundColor White
Write-Host "  ‚Ä¢ Prometheus: http://localhost:9090" -ForegroundColor White
Write-Host "  ‚Ä¢ cAdvisor: http://localhost:8081" -ForegroundColor White

Write-Host "‚úÖ D√âPLOIEMENT TERMIN√â !" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green