# Configuration sécurisée E-COMPTA-IA INTERNATIONAL
# Utiliser des variables d'environnement pour tous les secrets

spring:
  profiles:
    active: secure
  
  # Configuration de la base de données PostgreSQL (production)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/ecomptaia_prod}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:ecomptaia_user}
    password: ${DATABASE_PASSWORD:}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # Configuration JPA/Hibernate sécurisée
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    defer-datasource-initialization: false
  
  # Configuration Redis sécurisée
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  # Configuration de sécurité JWT sécurisée
  security:
    jwt:
      secret: ${JWT_SECRET:}
      expiration: ${JWT_EXPIRATION:86400000}
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
  
  # Configuration email sécurisée
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  
  # Configuration cache sécurisée
  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:3600000}
      cache-null-values: false

# Configuration du serveur sécurisée
server:
  port: ${SERVER_PORT:8080}
  address: 0.0.0.0
  servlet:
    context-path: /api
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
    max-threads: 200
    min-spare-threads: 10
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Configuration de logging sécurisée
logging:
  level:
    com.ecomptaia: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: WARN
    org.springframework.boot: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ecomptaia-secure.log
    max-size: 100MB
    max-history: 30

# Configuration de l'application sécurisée
app:
  name: E-COMPTA-IA INTERNATIONAL
  version: 1.0.0
  environment: secure
  security:
    enable-csrf: true
    enable-cors: true
    enable-rate-limiting: true
    rate-limit-requests-per-minute: ${RATE_LIMIT_REQUESTS_PER_MINUTE:100}
    rate-limit-burst-capacity: ${RATE_LIMIT_BURST_CAPACITY:200}
  email:
    support: ${SUPPORT_EMAIL:support@ecomptaia.com}
    noreply: ${NOREPLY_EMAIL:noreply@ecomptaia.com}
  monitoring:
    enabled: true
    prometheus:
      enabled: true
    health-check:
      enabled: true
      interval: 30s

# Configuration de sécurité supplémentaire
security:
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: "1; mode=block"
    referrer-policy: strict-origin-when-cross-origin
    content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;"
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://ecomptaia.com,https://*.ecomptaia.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type,X-Requested-With,Accept,Origin,X-Company-Id,X-User-Role
    exposed-headers: Authorization,X-Total-Count
    allow-credentials: true
    max-age: 3600

# Configuration de validation
validation:
  password:
    min-length: 8
    require-uppercase: true
    require-lowercase: true
    require-digit: true
    require-special-char: true
  username:
    min-length: 3
    max-length: 50
    pattern: "^[a-zA-Z0-9._-]+$"
  email:
    pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

# Configuration de session
session:
  timeout: 1800
  cookie:
    secure: true
    http-only: true
    same-site: strict
    max-age: 1800

# Configuration de backup
backup:
  enabled: true
  schedule: ${BACKUP_SCHEDULE:0 2 * * *}
  retention-days: ${BACKUP_RETENTION_DAYS:30}
  path: ${BACKUP_PATH:./backup}
  encryption:
    enabled: true
    algorithm: AES-256-GCM
    key: ${BACKUP_ENCRYPTION_KEY:}

# Configuration d'alerte
alerting:
  enabled: true
  email:
    critical: ${ALERT_EMAIL_CRITICAL:admin@ecomptaia.com}
    warning: ${ALERT_EMAIL_WARNING:tech@ecomptaia.com}
  slack:
    webhook-url: ${SLACK_WEBHOOK_URL:}
  thresholds:
    cpu-usage: 80
    memory-usage: 85
    disk-usage: 90
    error-rate: 5

