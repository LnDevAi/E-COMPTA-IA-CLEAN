version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ecomptaia-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ecomptaia_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecomptaia_secure_password_2024}
      POSTGRES_DB: ${POSTGRES_DB:-ecomptaia_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ecomptaia_user} -d ${POSTGRES_DB:-ecomptaia_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: ecomptaia-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-ecomptaia_redis_password_2024}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VERSION=${VERSION:-1.0.0}
    container_name: ecomptaia-backend
    environment:
      # Profil Spring
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      
      # Configuration base de données
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-ecomptaia_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-ecomptaia_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-ecomptaia_secure_password_2024}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_DDL_AUTO:-update}
      
      # Configuration Redis
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD:-ecomptaia_redis_password_2024}
      
      # Configuration JWT
      JWT_SECRET: ${JWT_SECRET:-ecomptaia_jwt_secret_key_2024_change_in_production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      
      # Configuration serveur
      SERVER_PORT: 8080
      SERVER_CONTEXT_PATH: /api
      
      # Configuration CORS
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:4200,http://localhost:80}
      
      # Configuration monitoring
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      
      # Configuration logs
      LOGGING_LEVEL_COM_ECOMPTAIA: ${LOG_LEVEL:-INFO}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN
      LOGGING_LEVEL_ORG_HIBERNATE: WARN
      
      # Configuration email
      SPRING_MAIL_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SPRING_MAIL_PORT: ${SMTP_PORT:-587}
      SPRING_MAIL_USERNAME: ${SMTP_USERNAME:-noreply@ecomptaia.com}
      SPRING_MAIL_PASSWORD: ${SMTP_PASSWORD:-your-smtp-password}
      
      # Configuration application
      APP_NAME: E-COMPTA-IA INTERNATIONAL
      APP_VERSION: ${VERSION:-1.0.0}
      APP_ENVIRONMENT: ${ENVIRONMENT:-production}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecomptaia-network
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VERSION=${VERSION:-1.0.0}
    container_name: ecomptaia-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/cache/nginx
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # Reverse Proxy Nginx
  nginx:
    image: nginx:1.25-alpine
    container_name: ecomptaia-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ecomptaia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/cache/nginx

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/redis
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/logs

networks:
  ecomptaia-network:
    driver: bridge
    name: ecomptaia-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
