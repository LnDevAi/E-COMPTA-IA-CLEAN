@echo off
echo ========================================
echo RED√âMARRAGE ET TEST COMPLET
echo ========================================
echo.

echo 1. Arr√™t du backend...
docker-compose -f docker/docker-compose.yml stop backend
echo.

echo 2. Red√©marrage du backend...
docker-compose -f docker/docker-compose.yml up -d backend
echo.

echo 3. Attente du d√©marrage (30 secondes)...
timeout /t 30 /nobreak > nul
echo.

echo 4. Test du backend...
curl -f http://localhost:8080/api/health
if %errorlevel% neq 0 (
    echo ‚ùå Backend non accessible
    goto :end
) else (
    echo ‚úÖ Backend accessible
)
echo.

echo 5. Test des endpoints corrig√©s...
echo.

echo Test √âcritures Comptables...
curl -s http://localhost:8080/api/accounting/journal-entries | findstr "data"
if %errorlevel% equ 0 (
    echo ‚úÖ √âcritures comptables OK
) else (
    echo ‚ùå √âcritures comptables KO
)
echo.

echo Test Employ√©s...
curl -s http://localhost:8080/api/hr/employees | findstr "data"
if %errorlevel% equ 0 (
    echo ‚úÖ Employ√©s OK
) else (
    echo ‚ùå Employ√©s KO
)
echo.

echo Test Clients...
curl -s http://localhost:8080/api/third-parties/customers | findstr "data"
if %errorlevel% equ 0 (
    echo ‚úÖ Clients OK
) else (
    echo ‚ùå Clients KO
)
echo.

echo ========================================
echo R√âSULTAT FINAL
echo ========================================
echo.
echo üéâ MAINTENANT TESTEZ DANS VOTRE NAVIGATEUR :
echo.
echo ‚úÖ Dashboard: http://localhost:4200/dashboard
echo ‚úÖ Comptabilit√©: http://localhost:4200/accounting/journal-entries
echo ‚úÖ RH & Paie: http://localhost:4200/hr/employees
echo ‚úÖ Tiers: http://localhost:4200/third-parties/customers
echo.
echo LES MODULES NE DEVRAIENT PLUS AFFICHER "EN D√âVELOPPEMENT" !
echo.

:end
pause
